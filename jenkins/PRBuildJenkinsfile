pipeline {
    agent none
    stages {
        stage('build') {
            agent {
                docker {
                    image 'agent-docker'
                    label 'workerXLarge'
                    alwaysPull false
                }
            }
            environment {
                AWS_ACCESS_KEY_ID     = credentials('JENKINS_AWS_ACCESS_KEY_ID')
                AWS_SECRET_ACCESS_KEY = credentials('JENKINS_AWS_SECRET_ACCESS_KEY')
            }
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '${sha1}']],
                    extensions: [[$class: 'CleanBeforeCheckout'], [$class: 'CleanCheckout']],
                    userRemoteConfigs: [[
                        credentialsId: 'ALLUXIO-CI_GITHUB',
                        url: 'https://github.com/TachyonNexus/enterprise',
                        name: 'origin',
                        refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
                    ]]
                ])
                timeout(90) {timestamps {script {
                    def cmd = 'sudo -u jenkins docker run -u jenkins --rm ' + 
                              '-v "/home/jenkins/.m2":/home/jenkins/.m2 ' + 
                              '-v "\$(pwd)":/usr/src/alluxio ' + 
                              '-e MAVEN_CONFIG=/home/jenkins/.m2 ' + 
                              '-w /usr/src/alluxio ' + 
                              'alluxio/alluxio-maven:0.0.1 ' + 
                              'mvn -Duser.home=/home/jenkins -T 2C clean install ' + 
                              '-Dsurefire.forkCount=4'
                    // legacy branches that contain an annotation/ directory must skip annotation check because it requires cloning a private repo
                    if (fileExists("${WORKSPACE}/annotation")) {
                        cmd += ' -Dannotation.skip'
                    }
                    sh cmd
                }}}
            }
            post {
                always {
                    junit '**/TEST-*.xml'
                    archive '**/target/artifacts/*,**/target/logs/*.log*'
                }
            }
        }
    }
}
