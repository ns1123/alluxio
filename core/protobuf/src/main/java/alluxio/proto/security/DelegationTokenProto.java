// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: security/delegation_token_proto.proto

package alluxio.proto.security;

public final class DelegationTokenProto {
  private DelegationTokenProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DelegationTokenIdentifierOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string owner = 1;
    /**
     * <code>optional string owner = 1;</code>
     *
     * <pre>
     * The user name of the onwer.
     * </pre>
     */
    boolean hasOwner();
    /**
     * <code>optional string owner = 1;</code>
     *
     * <pre>
     * The user name of the onwer.
     * </pre>
     */
    java.lang.String getOwner();
    /**
     * <code>optional string owner = 1;</code>
     *
     * <pre>
     * The user name of the onwer.
     * </pre>
     */
    com.google.protobuf.ByteString
        getOwnerBytes();

    // optional string renewer = 2;
    /**
     * <code>optional string renewer = 2;</code>
     *
     * <pre>
     * The user name of the renewer.
     * </pre>
     */
    boolean hasRenewer();
    /**
     * <code>optional string renewer = 2;</code>
     *
     * <pre>
     * The user name of the renewer.
     * </pre>
     */
    java.lang.String getRenewer();
    /**
     * <code>optional string renewer = 2;</code>
     *
     * <pre>
     * The user name of the renewer.
     * </pre>
     */
    com.google.protobuf.ByteString
        getRenewerBytes();

    // optional string realUser = 3;
    /**
     * <code>optional string realUser = 3;</code>
     *
     * <pre>
     * The user name of the real connected user.
     * </pre>
     */
    boolean hasRealUser();
    /**
     * <code>optional string realUser = 3;</code>
     *
     * <pre>
     * The user name of the real connected user.
     * </pre>
     */
    java.lang.String getRealUser();
    /**
     * <code>optional string realUser = 3;</code>
     *
     * <pre>
     * The user name of the real connected user.
     * </pre>
     */
    com.google.protobuf.ByteString
        getRealUserBytes();

    // optional int64 issueDate = 4;
    /**
     * <code>optional int64 issueDate = 4;</code>
     *
     * <pre>
     * The issue date of the token.
     * </pre>
     */
    boolean hasIssueDate();
    /**
     * <code>optional int64 issueDate = 4;</code>
     *
     * <pre>
     * The issue date of the token.
     * </pre>
     */
    long getIssueDate();

    // optional int64 maxDate = 5;
    /**
     * <code>optional int64 maxDate = 5;</code>
     *
     * <pre>
     * The expiration date of the token.
     * </pre>
     */
    boolean hasMaxDate();
    /**
     * <code>optional int64 maxDate = 5;</code>
     *
     * <pre>
     * The expiration date of the token.
     * </pre>
     */
    long getMaxDate();

    // optional int64 sequenceNumber = 6;
    /**
     * <code>optional int64 sequenceNumber = 6;</code>
     *
     * <pre>
     * The sequence number.
     * </pre>
     */
    boolean hasSequenceNumber();
    /**
     * <code>optional int64 sequenceNumber = 6;</code>
     *
     * <pre>
     * The sequence number.
     * </pre>
     */
    long getSequenceNumber();

    // optional int64 masterKeyId = 7;
    /**
     * <code>optional int64 masterKeyId = 7;</code>
     *
     * <pre>
     * The id of the master key.
     * </pre>
     */
    boolean hasMasterKeyId();
    /**
     * <code>optional int64 masterKeyId = 7;</code>
     *
     * <pre>
     * The id of the master key.
     * </pre>
     */
    long getMasterKeyId();
  }
  /**
   * Protobuf type {@code alluxio.proto.security.DelegationTokenIdentifier}
   *
   * <pre>
   * The delegation token identifier has the information fields representing a token used for
   * authenticating a user.
   * </pre>
   */
  public static final class DelegationTokenIdentifier extends
      com.google.protobuf.GeneratedMessage
      implements DelegationTokenIdentifierOrBuilder {
    // Use DelegationTokenIdentifier.newBuilder() to construct.
    private DelegationTokenIdentifier(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DelegationTokenIdentifier(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DelegationTokenIdentifier defaultInstance;
    public static DelegationTokenIdentifier getDefaultInstance() {
      return defaultInstance;
    }

    public DelegationTokenIdentifier getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DelegationTokenIdentifier(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              owner_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              renewer_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              realUser_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              issueDate_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              maxDate_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              sequenceNumber_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              masterKeyId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return alluxio.proto.security.DelegationTokenProto.internal_static_alluxio_proto_security_DelegationTokenIdentifier_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return alluxio.proto.security.DelegationTokenProto.internal_static_alluxio_proto_security_DelegationTokenIdentifier_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier.class, alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier.Builder.class);
    }

    public static com.google.protobuf.Parser<DelegationTokenIdentifier> PARSER =
        new com.google.protobuf.AbstractParser<DelegationTokenIdentifier>() {
      public DelegationTokenIdentifier parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DelegationTokenIdentifier(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DelegationTokenIdentifier> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string owner = 1;
    public static final int OWNER_FIELD_NUMBER = 1;
    private java.lang.Object owner_;
    /**
     * <code>optional string owner = 1;</code>
     *
     * <pre>
     * The user name of the onwer.
     * </pre>
     */
    public boolean hasOwner() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string owner = 1;</code>
     *
     * <pre>
     * The user name of the onwer.
     * </pre>
     */
    public java.lang.String getOwner() {
      java.lang.Object ref = owner_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          owner_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string owner = 1;</code>
     *
     * <pre>
     * The user name of the onwer.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOwnerBytes() {
      java.lang.Object ref = owner_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        owner_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string renewer = 2;
    public static final int RENEWER_FIELD_NUMBER = 2;
    private java.lang.Object renewer_;
    /**
     * <code>optional string renewer = 2;</code>
     *
     * <pre>
     * The user name of the renewer.
     * </pre>
     */
    public boolean hasRenewer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string renewer = 2;</code>
     *
     * <pre>
     * The user name of the renewer.
     * </pre>
     */
    public java.lang.String getRenewer() {
      java.lang.Object ref = renewer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          renewer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string renewer = 2;</code>
     *
     * <pre>
     * The user name of the renewer.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRenewerBytes() {
      java.lang.Object ref = renewer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        renewer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string realUser = 3;
    public static final int REALUSER_FIELD_NUMBER = 3;
    private java.lang.Object realUser_;
    /**
     * <code>optional string realUser = 3;</code>
     *
     * <pre>
     * The user name of the real connected user.
     * </pre>
     */
    public boolean hasRealUser() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string realUser = 3;</code>
     *
     * <pre>
     * The user name of the real connected user.
     * </pre>
     */
    public java.lang.String getRealUser() {
      java.lang.Object ref = realUser_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          realUser_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string realUser = 3;</code>
     *
     * <pre>
     * The user name of the real connected user.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRealUserBytes() {
      java.lang.Object ref = realUser_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        realUser_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 issueDate = 4;
    public static final int ISSUEDATE_FIELD_NUMBER = 4;
    private long issueDate_;
    /**
     * <code>optional int64 issueDate = 4;</code>
     *
     * <pre>
     * The issue date of the token.
     * </pre>
     */
    public boolean hasIssueDate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 issueDate = 4;</code>
     *
     * <pre>
     * The issue date of the token.
     * </pre>
     */
    public long getIssueDate() {
      return issueDate_;
    }

    // optional int64 maxDate = 5;
    public static final int MAXDATE_FIELD_NUMBER = 5;
    private long maxDate_;
    /**
     * <code>optional int64 maxDate = 5;</code>
     *
     * <pre>
     * The expiration date of the token.
     * </pre>
     */
    public boolean hasMaxDate() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 maxDate = 5;</code>
     *
     * <pre>
     * The expiration date of the token.
     * </pre>
     */
    public long getMaxDate() {
      return maxDate_;
    }

    // optional int64 sequenceNumber = 6;
    public static final int SEQUENCENUMBER_FIELD_NUMBER = 6;
    private long sequenceNumber_;
    /**
     * <code>optional int64 sequenceNumber = 6;</code>
     *
     * <pre>
     * The sequence number.
     * </pre>
     */
    public boolean hasSequenceNumber() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 sequenceNumber = 6;</code>
     *
     * <pre>
     * The sequence number.
     * </pre>
     */
    public long getSequenceNumber() {
      return sequenceNumber_;
    }

    // optional int64 masterKeyId = 7;
    public static final int MASTERKEYID_FIELD_NUMBER = 7;
    private long masterKeyId_;
    /**
     * <code>optional int64 masterKeyId = 7;</code>
     *
     * <pre>
     * The id of the master key.
     * </pre>
     */
    public boolean hasMasterKeyId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 masterKeyId = 7;</code>
     *
     * <pre>
     * The id of the master key.
     * </pre>
     */
    public long getMasterKeyId() {
      return masterKeyId_;
    }

    private void initFields() {
      owner_ = "";
      renewer_ = "";
      realUser_ = "";
      issueDate_ = 0L;
      maxDate_ = 0L;
      sequenceNumber_ = 0L;
      masterKeyId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getOwnerBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getRenewerBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getRealUserBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, issueDate_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, maxDate_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, sequenceNumber_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, masterKeyId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getOwnerBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getRenewerBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getRealUserBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, issueDate_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, maxDate_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, sequenceNumber_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, masterKeyId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code alluxio.proto.security.DelegationTokenIdentifier}
     *
     * <pre>
     * The delegation token identifier has the information fields representing a token used for
     * authenticating a user.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifierOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return alluxio.proto.security.DelegationTokenProto.internal_static_alluxio_proto_security_DelegationTokenIdentifier_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return alluxio.proto.security.DelegationTokenProto.internal_static_alluxio_proto_security_DelegationTokenIdentifier_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier.class, alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier.Builder.class);
      }

      // Construct using alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        owner_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        renewer_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        realUser_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        issueDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        sequenceNumber_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        masterKeyId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return alluxio.proto.security.DelegationTokenProto.internal_static_alluxio_proto_security_DelegationTokenIdentifier_descriptor;
      }

      public alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier getDefaultInstanceForType() {
        return alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier.getDefaultInstance();
      }

      public alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier build() {
        alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier buildPartial() {
        alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier result = new alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.owner_ = owner_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.renewer_ = renewer_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.realUser_ = realUser_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.issueDate_ = issueDate_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxDate_ = maxDate_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.sequenceNumber_ = sequenceNumber_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.masterKeyId_ = masterKeyId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier) {
          return mergeFrom((alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier other) {
        if (other == alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier.getDefaultInstance()) return this;
        if (other.hasOwner()) {
          bitField0_ |= 0x00000001;
          owner_ = other.owner_;
          onChanged();
        }
        if (other.hasRenewer()) {
          bitField0_ |= 0x00000002;
          renewer_ = other.renewer_;
          onChanged();
        }
        if (other.hasRealUser()) {
          bitField0_ |= 0x00000004;
          realUser_ = other.realUser_;
          onChanged();
        }
        if (other.hasIssueDate()) {
          setIssueDate(other.getIssueDate());
        }
        if (other.hasMaxDate()) {
          setMaxDate(other.getMaxDate());
        }
        if (other.hasSequenceNumber()) {
          setSequenceNumber(other.getSequenceNumber());
        }
        if (other.hasMasterKeyId()) {
          setMasterKeyId(other.getMasterKeyId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (alluxio.proto.security.DelegationTokenProto.DelegationTokenIdentifier) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string owner = 1;
      private java.lang.Object owner_ = "";
      /**
       * <code>optional string owner = 1;</code>
       *
       * <pre>
       * The user name of the onwer.
       * </pre>
       */
      public boolean hasOwner() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string owner = 1;</code>
       *
       * <pre>
       * The user name of the onwer.
       * </pre>
       */
      public java.lang.String getOwner() {
        java.lang.Object ref = owner_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          owner_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string owner = 1;</code>
       *
       * <pre>
       * The user name of the onwer.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOwnerBytes() {
        java.lang.Object ref = owner_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          owner_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string owner = 1;</code>
       *
       * <pre>
       * The user name of the onwer.
       * </pre>
       */
      public Builder setOwner(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        owner_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string owner = 1;</code>
       *
       * <pre>
       * The user name of the onwer.
       * </pre>
       */
      public Builder clearOwner() {
        bitField0_ = (bitField0_ & ~0x00000001);
        owner_ = getDefaultInstance().getOwner();
        onChanged();
        return this;
      }
      /**
       * <code>optional string owner = 1;</code>
       *
       * <pre>
       * The user name of the onwer.
       * </pre>
       */
      public Builder setOwnerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        owner_ = value;
        onChanged();
        return this;
      }

      // optional string renewer = 2;
      private java.lang.Object renewer_ = "";
      /**
       * <code>optional string renewer = 2;</code>
       *
       * <pre>
       * The user name of the renewer.
       * </pre>
       */
      public boolean hasRenewer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string renewer = 2;</code>
       *
       * <pre>
       * The user name of the renewer.
       * </pre>
       */
      public java.lang.String getRenewer() {
        java.lang.Object ref = renewer_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          renewer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string renewer = 2;</code>
       *
       * <pre>
       * The user name of the renewer.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRenewerBytes() {
        java.lang.Object ref = renewer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          renewer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string renewer = 2;</code>
       *
       * <pre>
       * The user name of the renewer.
       * </pre>
       */
      public Builder setRenewer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        renewer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string renewer = 2;</code>
       *
       * <pre>
       * The user name of the renewer.
       * </pre>
       */
      public Builder clearRenewer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        renewer_ = getDefaultInstance().getRenewer();
        onChanged();
        return this;
      }
      /**
       * <code>optional string renewer = 2;</code>
       *
       * <pre>
       * The user name of the renewer.
       * </pre>
       */
      public Builder setRenewerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        renewer_ = value;
        onChanged();
        return this;
      }

      // optional string realUser = 3;
      private java.lang.Object realUser_ = "";
      /**
       * <code>optional string realUser = 3;</code>
       *
       * <pre>
       * The user name of the real connected user.
       * </pre>
       */
      public boolean hasRealUser() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string realUser = 3;</code>
       *
       * <pre>
       * The user name of the real connected user.
       * </pre>
       */
      public java.lang.String getRealUser() {
        java.lang.Object ref = realUser_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          realUser_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string realUser = 3;</code>
       *
       * <pre>
       * The user name of the real connected user.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRealUserBytes() {
        java.lang.Object ref = realUser_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          realUser_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string realUser = 3;</code>
       *
       * <pre>
       * The user name of the real connected user.
       * </pre>
       */
      public Builder setRealUser(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        realUser_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string realUser = 3;</code>
       *
       * <pre>
       * The user name of the real connected user.
       * </pre>
       */
      public Builder clearRealUser() {
        bitField0_ = (bitField0_ & ~0x00000004);
        realUser_ = getDefaultInstance().getRealUser();
        onChanged();
        return this;
      }
      /**
       * <code>optional string realUser = 3;</code>
       *
       * <pre>
       * The user name of the real connected user.
       * </pre>
       */
      public Builder setRealUserBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        realUser_ = value;
        onChanged();
        return this;
      }

      // optional int64 issueDate = 4;
      private long issueDate_ ;
      /**
       * <code>optional int64 issueDate = 4;</code>
       *
       * <pre>
       * The issue date of the token.
       * </pre>
       */
      public boolean hasIssueDate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 issueDate = 4;</code>
       *
       * <pre>
       * The issue date of the token.
       * </pre>
       */
      public long getIssueDate() {
        return issueDate_;
      }
      /**
       * <code>optional int64 issueDate = 4;</code>
       *
       * <pre>
       * The issue date of the token.
       * </pre>
       */
      public Builder setIssueDate(long value) {
        bitField0_ |= 0x00000008;
        issueDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 issueDate = 4;</code>
       *
       * <pre>
       * The issue date of the token.
       * </pre>
       */
      public Builder clearIssueDate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        issueDate_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 maxDate = 5;
      private long maxDate_ ;
      /**
       * <code>optional int64 maxDate = 5;</code>
       *
       * <pre>
       * The expiration date of the token.
       * </pre>
       */
      public boolean hasMaxDate() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 maxDate = 5;</code>
       *
       * <pre>
       * The expiration date of the token.
       * </pre>
       */
      public long getMaxDate() {
        return maxDate_;
      }
      /**
       * <code>optional int64 maxDate = 5;</code>
       *
       * <pre>
       * The expiration date of the token.
       * </pre>
       */
      public Builder setMaxDate(long value) {
        bitField0_ |= 0x00000010;
        maxDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 maxDate = 5;</code>
       *
       * <pre>
       * The expiration date of the token.
       * </pre>
       */
      public Builder clearMaxDate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxDate_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 sequenceNumber = 6;
      private long sequenceNumber_ ;
      /**
       * <code>optional int64 sequenceNumber = 6;</code>
       *
       * <pre>
       * The sequence number.
       * </pre>
       */
      public boolean hasSequenceNumber() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 sequenceNumber = 6;</code>
       *
       * <pre>
       * The sequence number.
       * </pre>
       */
      public long getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <code>optional int64 sequenceNumber = 6;</code>
       *
       * <pre>
       * The sequence number.
       * </pre>
       */
      public Builder setSequenceNumber(long value) {
        bitField0_ |= 0x00000020;
        sequenceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 sequenceNumber = 6;</code>
       *
       * <pre>
       * The sequence number.
       * </pre>
       */
      public Builder clearSequenceNumber() {
        bitField0_ = (bitField0_ & ~0x00000020);
        sequenceNumber_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 masterKeyId = 7;
      private long masterKeyId_ ;
      /**
       * <code>optional int64 masterKeyId = 7;</code>
       *
       * <pre>
       * The id of the master key.
       * </pre>
       */
      public boolean hasMasterKeyId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 masterKeyId = 7;</code>
       *
       * <pre>
       * The id of the master key.
       * </pre>
       */
      public long getMasterKeyId() {
        return masterKeyId_;
      }
      /**
       * <code>optional int64 masterKeyId = 7;</code>
       *
       * <pre>
       * The id of the master key.
       * </pre>
       */
      public Builder setMasterKeyId(long value) {
        bitField0_ |= 0x00000040;
        masterKeyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 masterKeyId = 7;</code>
       *
       * <pre>
       * The id of the master key.
       * </pre>
       */
      public Builder clearMasterKeyId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        masterKeyId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:alluxio.proto.security.DelegationTokenIdentifier)
    }

    static {
      defaultInstance = new DelegationTokenIdentifier(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:alluxio.proto.security.DelegationTokenIdentifier)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_alluxio_proto_security_DelegationTokenIdentifier_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_alluxio_proto_security_DelegationTokenIdentifier_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%security/delegation_token_proto.proto\022" +
      "\026alluxio.proto.security\"\236\001\n\031DelegationTo" +
      "kenIdentifier\022\r\n\005owner\030\001 \001(\t\022\017\n\007renewer\030" +
      "\002 \001(\t\022\020\n\010realUser\030\003 \001(\t\022\021\n\tissueDate\030\004 \001" +
      "(\003\022\017\n\007maxDate\030\005 \001(\003\022\026\n\016sequenceNumber\030\006 " +
      "\001(\003\022\023\n\013masterKeyId\030\007 \001(\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_alluxio_proto_security_DelegationTokenIdentifier_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_alluxio_proto_security_DelegationTokenIdentifier_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_alluxio_proto_security_DelegationTokenIdentifier_descriptor,
              new java.lang.String[] { "Owner", "Renewer", "RealUser", "IssueDate", "MaxDate", "SequenceNumber", "MasterKeyId", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
