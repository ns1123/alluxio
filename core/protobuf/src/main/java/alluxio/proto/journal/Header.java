// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: header.proto

package alluxio.proto.journal;

public final class Header {
  private Header() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface BlockHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:alluxio.proto.journal.BlockHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed32 chunk_header_size = 1;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    boolean hasChunkHeaderSize();
    /**
     * <code>optional fixed32 chunk_header_size = 1;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    int getChunkHeaderSize();

    /**
     * <code>optional fixed32 chunk_size = 2;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    boolean hasChunkSize();
    /**
     * <code>optional fixed32 chunk_size = 2;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    int getChunkSize();

    /**
     * <code>optional fixed32 chunk_footer_size = 3;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    boolean hasChunkFooterSize();
    /**
     * <code>optional fixed32 chunk_footer_size = 3;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    int getChunkFooterSize();

    /**
     * <code>optional fixed32 physical_block_size = 4;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    boolean hasPhysicalBlockSize();
    /**
     * <code>optional fixed32 physical_block_size = 4;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    int getPhysicalBlockSize();

    /**
     * <code>optional fixed32 block_footer_size = 5;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    boolean hasBlockFooterSize();
    /**
     * <code>optional fixed32 block_footer_size = 5;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    int getBlockFooterSize();

    /**
     * <code>optional fixed64 encryption_id = 6;</code>
     */
    boolean hasEncryptionId();
    /**
     * <code>optional fixed64 encryption_id = 6;</code>
     */
    long getEncryptionId();
  }
  /**
   * Protobuf type {@code alluxio.proto.journal.BlockHeader}
   *
   * <pre>
   * The block header includes file-level and block-level metadata information.
   * Use fixed type fields here to make sure the BlockHeader serialized size is predicable.
   * </pre>
   */
  public static final class BlockHeader extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:alluxio.proto.journal.BlockHeader)
      BlockHeaderOrBuilder {
    // Use BlockHeader.newBuilder() to construct.
    private BlockHeader(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BlockHeader(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BlockHeader defaultInstance;
    public static BlockHeader getDefaultInstance() {
      return defaultInstance;
    }

    public BlockHeader getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BlockHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              chunkHeaderSize_ = input.readFixed32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              chunkSize_ = input.readFixed32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              chunkFooterSize_ = input.readFixed32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              physicalBlockSize_ = input.readFixed32();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              blockFooterSize_ = input.readFixed32();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              encryptionId_ = input.readFixed64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return alluxio.proto.journal.Header.internal_static_alluxio_proto_journal_BlockHeader_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return alluxio.proto.journal.Header.internal_static_alluxio_proto_journal_BlockHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              alluxio.proto.journal.Header.BlockHeader.class, alluxio.proto.journal.Header.BlockHeader.Builder.class);
    }

    public static com.google.protobuf.Parser<BlockHeader> PARSER =
        new com.google.protobuf.AbstractParser<BlockHeader>() {
      public BlockHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockHeader(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BlockHeader> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CHUNK_HEADER_SIZE_FIELD_NUMBER = 1;
    private int chunkHeaderSize_;
    /**
     * <code>optional fixed32 chunk_header_size = 1;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public boolean hasChunkHeaderSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed32 chunk_header_size = 1;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public int getChunkHeaderSize() {
      return chunkHeaderSize_;
    }

    public static final int CHUNK_SIZE_FIELD_NUMBER = 2;
    private int chunkSize_;
    /**
     * <code>optional fixed32 chunk_size = 2;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public boolean hasChunkSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed32 chunk_size = 2;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public int getChunkSize() {
      return chunkSize_;
    }

    public static final int CHUNK_FOOTER_SIZE_FIELD_NUMBER = 3;
    private int chunkFooterSize_;
    /**
     * <code>optional fixed32 chunk_footer_size = 3;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public boolean hasChunkFooterSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional fixed32 chunk_footer_size = 3;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public int getChunkFooterSize() {
      return chunkFooterSize_;
    }

    public static final int PHYSICAL_BLOCK_SIZE_FIELD_NUMBER = 4;
    private int physicalBlockSize_;
    /**
     * <code>optional fixed32 physical_block_size = 4;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public boolean hasPhysicalBlockSize() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional fixed32 physical_block_size = 4;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public int getPhysicalBlockSize() {
      return physicalBlockSize_;
    }

    public static final int BLOCK_FOOTER_SIZE_FIELD_NUMBER = 5;
    private int blockFooterSize_;
    /**
     * <code>optional fixed32 block_footer_size = 5;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public boolean hasBlockFooterSize() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional fixed32 block_footer_size = 5;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public int getBlockFooterSize() {
      return blockFooterSize_;
    }

    public static final int ENCRYPTION_ID_FIELD_NUMBER = 6;
    private long encryptionId_;
    /**
     * <code>optional fixed64 encryption_id = 6;</code>
     */
    public boolean hasEncryptionId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional fixed64 encryption_id = 6;</code>
     */
    public long getEncryptionId() {
      return encryptionId_;
    }

    private void initFields() {
      chunkHeaderSize_ = 0;
      chunkSize_ = 0;
      chunkFooterSize_ = 0;
      physicalBlockSize_ = 0;
      blockFooterSize_ = 0;
      encryptionId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, chunkHeaderSize_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed32(2, chunkSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFixed32(3, chunkFooterSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFixed32(4, physicalBlockSize_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFixed32(5, blockFooterSize_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFixed64(6, encryptionId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, chunkHeaderSize_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, chunkSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, chunkFooterSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, physicalBlockSize_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(5, blockFooterSize_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(6, encryptionId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static alluxio.proto.journal.Header.BlockHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static alluxio.proto.journal.Header.BlockHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static alluxio.proto.journal.Header.BlockHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static alluxio.proto.journal.Header.BlockHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static alluxio.proto.journal.Header.BlockHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static alluxio.proto.journal.Header.BlockHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static alluxio.proto.journal.Header.BlockHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static alluxio.proto.journal.Header.BlockHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static alluxio.proto.journal.Header.BlockHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static alluxio.proto.journal.Header.BlockHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(alluxio.proto.journal.Header.BlockHeader prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code alluxio.proto.journal.BlockHeader}
     *
     * <pre>
     * The block header includes file-level and block-level metadata information.
     * Use fixed type fields here to make sure the BlockHeader serialized size is predicable.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:alluxio.proto.journal.BlockHeader)
        alluxio.proto.journal.Header.BlockHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return alluxio.proto.journal.Header.internal_static_alluxio_proto_journal_BlockHeader_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return alluxio.proto.journal.Header.internal_static_alluxio_proto_journal_BlockHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                alluxio.proto.journal.Header.BlockHeader.class, alluxio.proto.journal.Header.BlockHeader.Builder.class);
      }

      // Construct using alluxio.proto.journal.Header.BlockHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        chunkHeaderSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        chunkFooterSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        physicalBlockSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        blockFooterSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        encryptionId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return alluxio.proto.journal.Header.internal_static_alluxio_proto_journal_BlockHeader_descriptor;
      }

      public alluxio.proto.journal.Header.BlockHeader getDefaultInstanceForType() {
        return alluxio.proto.journal.Header.BlockHeader.getDefaultInstance();
      }

      public alluxio.proto.journal.Header.BlockHeader build() {
        alluxio.proto.journal.Header.BlockHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public alluxio.proto.journal.Header.BlockHeader buildPartial() {
        alluxio.proto.journal.Header.BlockHeader result = new alluxio.proto.journal.Header.BlockHeader(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chunkHeaderSize_ = chunkHeaderSize_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.chunkSize_ = chunkSize_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.chunkFooterSize_ = chunkFooterSize_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.physicalBlockSize_ = physicalBlockSize_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.blockFooterSize_ = blockFooterSize_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.encryptionId_ = encryptionId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof alluxio.proto.journal.Header.BlockHeader) {
          return mergeFrom((alluxio.proto.journal.Header.BlockHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(alluxio.proto.journal.Header.BlockHeader other) {
        if (other == alluxio.proto.journal.Header.BlockHeader.getDefaultInstance()) return this;
        if (other.hasChunkHeaderSize()) {
          setChunkHeaderSize(other.getChunkHeaderSize());
        }
        if (other.hasChunkSize()) {
          setChunkSize(other.getChunkSize());
        }
        if (other.hasChunkFooterSize()) {
          setChunkFooterSize(other.getChunkFooterSize());
        }
        if (other.hasPhysicalBlockSize()) {
          setPhysicalBlockSize(other.getPhysicalBlockSize());
        }
        if (other.hasBlockFooterSize()) {
          setBlockFooterSize(other.getBlockFooterSize());
        }
        if (other.hasEncryptionId()) {
          setEncryptionId(other.getEncryptionId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        alluxio.proto.journal.Header.BlockHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (alluxio.proto.journal.Header.BlockHeader) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int chunkHeaderSize_ ;
      /**
       * <code>optional fixed32 chunk_header_size = 1;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public boolean hasChunkHeaderSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed32 chunk_header_size = 1;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public int getChunkHeaderSize() {
        return chunkHeaderSize_;
      }
      /**
       * <code>optional fixed32 chunk_header_size = 1;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder setChunkHeaderSize(int value) {
        bitField0_ |= 0x00000001;
        chunkHeaderSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 chunk_header_size = 1;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder clearChunkHeaderSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkHeaderSize_ = 0;
        onChanged();
        return this;
      }

      private int chunkSize_ ;
      /**
       * <code>optional fixed32 chunk_size = 2;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public boolean hasChunkSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed32 chunk_size = 2;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public int getChunkSize() {
        return chunkSize_;
      }
      /**
       * <code>optional fixed32 chunk_size = 2;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder setChunkSize(int value) {
        bitField0_ |= 0x00000002;
        chunkSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 chunk_size = 2;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder clearChunkSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        chunkSize_ = 0;
        onChanged();
        return this;
      }

      private int chunkFooterSize_ ;
      /**
       * <code>optional fixed32 chunk_footer_size = 3;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public boolean hasChunkFooterSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional fixed32 chunk_footer_size = 3;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public int getChunkFooterSize() {
        return chunkFooterSize_;
      }
      /**
       * <code>optional fixed32 chunk_footer_size = 3;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder setChunkFooterSize(int value) {
        bitField0_ |= 0x00000004;
        chunkFooterSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 chunk_footer_size = 3;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder clearChunkFooterSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        chunkFooterSize_ = 0;
        onChanged();
        return this;
      }

      private int physicalBlockSize_ ;
      /**
       * <code>optional fixed32 physical_block_size = 4;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public boolean hasPhysicalBlockSize() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional fixed32 physical_block_size = 4;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public int getPhysicalBlockSize() {
        return physicalBlockSize_;
      }
      /**
       * <code>optional fixed32 physical_block_size = 4;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder setPhysicalBlockSize(int value) {
        bitField0_ |= 0x00000008;
        physicalBlockSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 physical_block_size = 4;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder clearPhysicalBlockSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        physicalBlockSize_ = 0;
        onChanged();
        return this;
      }

      private int blockFooterSize_ ;
      /**
       * <code>optional fixed32 block_footer_size = 5;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public boolean hasBlockFooterSize() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional fixed32 block_footer_size = 5;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public int getBlockFooterSize() {
        return blockFooterSize_;
      }
      /**
       * <code>optional fixed32 block_footer_size = 5;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder setBlockFooterSize(int value) {
        bitField0_ |= 0x00000010;
        blockFooterSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 block_footer_size = 5;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder clearBlockFooterSize() {
        bitField0_ = (bitField0_ & ~0x00000010);
        blockFooterSize_ = 0;
        onChanged();
        return this;
      }

      private long encryptionId_ ;
      /**
       * <code>optional fixed64 encryption_id = 6;</code>
       */
      public boolean hasEncryptionId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional fixed64 encryption_id = 6;</code>
       */
      public long getEncryptionId() {
        return encryptionId_;
      }
      /**
       * <code>optional fixed64 encryption_id = 6;</code>
       */
      public Builder setEncryptionId(long value) {
        bitField0_ |= 0x00000020;
        encryptionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 encryption_id = 6;</code>
       */
      public Builder clearEncryptionId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        encryptionId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:alluxio.proto.journal.BlockHeader)
    }

    static {
      defaultInstance = new BlockHeader(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:alluxio.proto.journal.BlockHeader)
  }

  public interface HeaderInInodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:alluxio.proto.journal.HeaderInInode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 chunk_header_size = 1 [default = 0];</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    boolean hasChunkHeaderSize();
    /**
     * <code>optional int32 chunk_header_size = 1 [default = 0];</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    int getChunkHeaderSize();

    /**
     * <code>optional int32 chunk_size = 2 [default = 65536];</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    boolean hasChunkSize();
    /**
     * <code>optional int32 chunk_size = 2 [default = 65536];</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    int getChunkSize();

    /**
     * <code>optional int32 chunk_footer_size = 3 [default = 16];</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    boolean hasChunkFooterSize();
    /**
     * <code>optional int32 chunk_footer_size = 3 [default = 16];</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    int getChunkFooterSize();

    /**
     * <code>optional int32 block_header_size = 4;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    boolean hasBlockHeaderSize();
    /**
     * <code>optional int32 block_header_size = 4;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    int getBlockHeaderSize();

    /**
     * <code>optional int32 block_footer_size = 5;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    boolean hasBlockFooterSize();
    /**
     * <code>optional int32 block_footer_size = 5;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    int getBlockFooterSize();

    /**
     * <code>optional int64 encryption_id = 6;</code>
     */
    boolean hasEncryptionId();
    /**
     * <code>optional int64 encryption_id = 6;</code>
     */
    long getEncryptionId();
  }
  /**
   * Protobuf type {@code alluxio.proto.journal.HeaderInInode}
   *
   * <pre>
   * A compact header format in inode to save as much as possible. The fields which are already
   * present in the InodeFile are not stored here to avoid redundancy.
   * </pre>
   */
  public static final class HeaderInInode extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:alluxio.proto.journal.HeaderInInode)
      HeaderInInodeOrBuilder {
    // Use HeaderInInode.newBuilder() to construct.
    private HeaderInInode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HeaderInInode(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HeaderInInode defaultInstance;
    public static HeaderInInode getDefaultInstance() {
      return defaultInstance;
    }

    public HeaderInInode getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HeaderInInode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              chunkHeaderSize_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              chunkSize_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              chunkFooterSize_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              blockHeaderSize_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              blockFooterSize_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              encryptionId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return alluxio.proto.journal.Header.internal_static_alluxio_proto_journal_HeaderInInode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return alluxio.proto.journal.Header.internal_static_alluxio_proto_journal_HeaderInInode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              alluxio.proto.journal.Header.HeaderInInode.class, alluxio.proto.journal.Header.HeaderInInode.Builder.class);
    }

    public static com.google.protobuf.Parser<HeaderInInode> PARSER =
        new com.google.protobuf.AbstractParser<HeaderInInode>() {
      public HeaderInInode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeaderInInode(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HeaderInInode> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CHUNK_HEADER_SIZE_FIELD_NUMBER = 1;
    private int chunkHeaderSize_;
    /**
     * <code>optional int32 chunk_header_size = 1 [default = 0];</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public boolean hasChunkHeaderSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 chunk_header_size = 1 [default = 0];</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public int getChunkHeaderSize() {
      return chunkHeaderSize_;
    }

    public static final int CHUNK_SIZE_FIELD_NUMBER = 2;
    private int chunkSize_;
    /**
     * <code>optional int32 chunk_size = 2 [default = 65536];</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public boolean hasChunkSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 chunk_size = 2 [default = 65536];</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public int getChunkSize() {
      return chunkSize_;
    }

    public static final int CHUNK_FOOTER_SIZE_FIELD_NUMBER = 3;
    private int chunkFooterSize_;
    /**
     * <code>optional int32 chunk_footer_size = 3 [default = 16];</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public boolean hasChunkFooterSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 chunk_footer_size = 3 [default = 16];</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public int getChunkFooterSize() {
      return chunkFooterSize_;
    }

    public static final int BLOCK_HEADER_SIZE_FIELD_NUMBER = 4;
    private int blockHeaderSize_;
    /**
     * <code>optional int32 block_header_size = 4;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public boolean hasBlockHeaderSize() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 block_header_size = 4;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public int getBlockHeaderSize() {
      return blockHeaderSize_;
    }

    public static final int BLOCK_FOOTER_SIZE_FIELD_NUMBER = 5;
    private int blockFooterSize_;
    /**
     * <code>optional int32 block_footer_size = 5;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public boolean hasBlockFooterSize() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 block_footer_size = 5;</code>
     *
     * <pre>
     * in bytes
     * </pre>
     */
    public int getBlockFooterSize() {
      return blockFooterSize_;
    }

    public static final int ENCRYPTION_ID_FIELD_NUMBER = 6;
    private long encryptionId_;
    /**
     * <code>optional int64 encryption_id = 6;</code>
     */
    public boolean hasEncryptionId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 encryption_id = 6;</code>
     */
    public long getEncryptionId() {
      return encryptionId_;
    }

    private void initFields() {
      chunkHeaderSize_ = 0;
      chunkSize_ = 65536;
      chunkFooterSize_ = 16;
      blockHeaderSize_ = 0;
      blockFooterSize_ = 0;
      encryptionId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, chunkHeaderSize_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, chunkSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, chunkFooterSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, blockHeaderSize_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, blockFooterSize_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, encryptionId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, chunkHeaderSize_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, chunkSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, chunkFooterSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, blockHeaderSize_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, blockFooterSize_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, encryptionId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static alluxio.proto.journal.Header.HeaderInInode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static alluxio.proto.journal.Header.HeaderInInode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static alluxio.proto.journal.Header.HeaderInInode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static alluxio.proto.journal.Header.HeaderInInode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static alluxio.proto.journal.Header.HeaderInInode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static alluxio.proto.journal.Header.HeaderInInode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static alluxio.proto.journal.Header.HeaderInInode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static alluxio.proto.journal.Header.HeaderInInode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static alluxio.proto.journal.Header.HeaderInInode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static alluxio.proto.journal.Header.HeaderInInode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(alluxio.proto.journal.Header.HeaderInInode prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code alluxio.proto.journal.HeaderInInode}
     *
     * <pre>
     * A compact header format in inode to save as much as possible. The fields which are already
     * present in the InodeFile are not stored here to avoid redundancy.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:alluxio.proto.journal.HeaderInInode)
        alluxio.proto.journal.Header.HeaderInInodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return alluxio.proto.journal.Header.internal_static_alluxio_proto_journal_HeaderInInode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return alluxio.proto.journal.Header.internal_static_alluxio_proto_journal_HeaderInInode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                alluxio.proto.journal.Header.HeaderInInode.class, alluxio.proto.journal.Header.HeaderInInode.Builder.class);
      }

      // Construct using alluxio.proto.journal.Header.HeaderInInode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        chunkHeaderSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkSize_ = 65536;
        bitField0_ = (bitField0_ & ~0x00000002);
        chunkFooterSize_ = 16;
        bitField0_ = (bitField0_ & ~0x00000004);
        blockHeaderSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        blockFooterSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        encryptionId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return alluxio.proto.journal.Header.internal_static_alluxio_proto_journal_HeaderInInode_descriptor;
      }

      public alluxio.proto.journal.Header.HeaderInInode getDefaultInstanceForType() {
        return alluxio.proto.journal.Header.HeaderInInode.getDefaultInstance();
      }

      public alluxio.proto.journal.Header.HeaderInInode build() {
        alluxio.proto.journal.Header.HeaderInInode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public alluxio.proto.journal.Header.HeaderInInode buildPartial() {
        alluxio.proto.journal.Header.HeaderInInode result = new alluxio.proto.journal.Header.HeaderInInode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chunkHeaderSize_ = chunkHeaderSize_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.chunkSize_ = chunkSize_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.chunkFooterSize_ = chunkFooterSize_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.blockHeaderSize_ = blockHeaderSize_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.blockFooterSize_ = blockFooterSize_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.encryptionId_ = encryptionId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof alluxio.proto.journal.Header.HeaderInInode) {
          return mergeFrom((alluxio.proto.journal.Header.HeaderInInode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(alluxio.proto.journal.Header.HeaderInInode other) {
        if (other == alluxio.proto.journal.Header.HeaderInInode.getDefaultInstance()) return this;
        if (other.hasChunkHeaderSize()) {
          setChunkHeaderSize(other.getChunkHeaderSize());
        }
        if (other.hasChunkSize()) {
          setChunkSize(other.getChunkSize());
        }
        if (other.hasChunkFooterSize()) {
          setChunkFooterSize(other.getChunkFooterSize());
        }
        if (other.hasBlockHeaderSize()) {
          setBlockHeaderSize(other.getBlockHeaderSize());
        }
        if (other.hasBlockFooterSize()) {
          setBlockFooterSize(other.getBlockFooterSize());
        }
        if (other.hasEncryptionId()) {
          setEncryptionId(other.getEncryptionId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        alluxio.proto.journal.Header.HeaderInInode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (alluxio.proto.journal.Header.HeaderInInode) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int chunkHeaderSize_ ;
      /**
       * <code>optional int32 chunk_header_size = 1 [default = 0];</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public boolean hasChunkHeaderSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 chunk_header_size = 1 [default = 0];</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public int getChunkHeaderSize() {
        return chunkHeaderSize_;
      }
      /**
       * <code>optional int32 chunk_header_size = 1 [default = 0];</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder setChunkHeaderSize(int value) {
        bitField0_ |= 0x00000001;
        chunkHeaderSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 chunk_header_size = 1 [default = 0];</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder clearChunkHeaderSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkHeaderSize_ = 0;
        onChanged();
        return this;
      }

      private int chunkSize_ = 65536;
      /**
       * <code>optional int32 chunk_size = 2 [default = 65536];</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public boolean hasChunkSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 chunk_size = 2 [default = 65536];</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public int getChunkSize() {
        return chunkSize_;
      }
      /**
       * <code>optional int32 chunk_size = 2 [default = 65536];</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder setChunkSize(int value) {
        bitField0_ |= 0x00000002;
        chunkSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 chunk_size = 2 [default = 65536];</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder clearChunkSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        chunkSize_ = 65536;
        onChanged();
        return this;
      }

      private int chunkFooterSize_ = 16;
      /**
       * <code>optional int32 chunk_footer_size = 3 [default = 16];</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public boolean hasChunkFooterSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 chunk_footer_size = 3 [default = 16];</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public int getChunkFooterSize() {
        return chunkFooterSize_;
      }
      /**
       * <code>optional int32 chunk_footer_size = 3 [default = 16];</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder setChunkFooterSize(int value) {
        bitField0_ |= 0x00000004;
        chunkFooterSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 chunk_footer_size = 3 [default = 16];</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder clearChunkFooterSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        chunkFooterSize_ = 16;
        onChanged();
        return this;
      }

      private int blockHeaderSize_ ;
      /**
       * <code>optional int32 block_header_size = 4;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public boolean hasBlockHeaderSize() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 block_header_size = 4;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public int getBlockHeaderSize() {
        return blockHeaderSize_;
      }
      /**
       * <code>optional int32 block_header_size = 4;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder setBlockHeaderSize(int value) {
        bitField0_ |= 0x00000008;
        blockHeaderSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 block_header_size = 4;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder clearBlockHeaderSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        blockHeaderSize_ = 0;
        onChanged();
        return this;
      }

      private int blockFooterSize_ ;
      /**
       * <code>optional int32 block_footer_size = 5;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public boolean hasBlockFooterSize() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 block_footer_size = 5;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public int getBlockFooterSize() {
        return blockFooterSize_;
      }
      /**
       * <code>optional int32 block_footer_size = 5;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder setBlockFooterSize(int value) {
        bitField0_ |= 0x00000010;
        blockFooterSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 block_footer_size = 5;</code>
       *
       * <pre>
       * in bytes
       * </pre>
       */
      public Builder clearBlockFooterSize() {
        bitField0_ = (bitField0_ & ~0x00000010);
        blockFooterSize_ = 0;
        onChanged();
        return this;
      }

      private long encryptionId_ ;
      /**
       * <code>optional int64 encryption_id = 6;</code>
       */
      public boolean hasEncryptionId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 encryption_id = 6;</code>
       */
      public long getEncryptionId() {
        return encryptionId_;
      }
      /**
       * <code>optional int64 encryption_id = 6;</code>
       */
      public Builder setEncryptionId(long value) {
        bitField0_ |= 0x00000020;
        encryptionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 encryption_id = 6;</code>
       */
      public Builder clearEncryptionId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        encryptionId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:alluxio.proto.journal.HeaderInInode)
    }

    static {
      defaultInstance = new HeaderInInode(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:alluxio.proto.journal.HeaderInInode)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_alluxio_proto_journal_BlockHeader_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_alluxio_proto_journal_BlockHeader_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_alluxio_proto_journal_HeaderInInode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_alluxio_proto_journal_HeaderInInode_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014header.proto\022\025alluxio.proto.journal\"\246\001" +
      "\n\013BlockHeader\022\031\n\021chunk_header_size\030\001 \001(\007" +
      "\022\022\n\nchunk_size\030\002 \001(\007\022\031\n\021chunk_footer_siz" +
      "e\030\003 \001(\007\022\033\n\023physical_block_size\030\004 \001(\007\022\031\n\021" +
      "block_footer_size\030\005 \001(\007\022\025\n\rencryption_id" +
      "\030\006 \001(\006\"\264\001\n\rHeaderInInode\022\034\n\021chunk_header" +
      "_size\030\001 \001(\005:\0010\022\031\n\nchunk_size\030\002 \001(\005:\0056553" +
      "6\022\035\n\021chunk_footer_size\030\003 \001(\005:\00216\022\031\n\021bloc" +
      "k_header_size\030\004 \001(\005\022\031\n\021block_footer_size" +
      "\030\005 \001(\005\022\025\n\rencryption_id\030\006 \001(\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_alluxio_proto_journal_BlockHeader_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_alluxio_proto_journal_BlockHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_alluxio_proto_journal_BlockHeader_descriptor,
        new java.lang.String[] { "ChunkHeaderSize", "ChunkSize", "ChunkFooterSize", "PhysicalBlockSize", "BlockFooterSize", "EncryptionId", });
    internal_static_alluxio_proto_journal_HeaderInInode_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_alluxio_proto_journal_HeaderInInode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_alluxio_proto_journal_HeaderInInode_descriptor,
        new java.lang.String[] { "ChunkHeaderSize", "ChunkSize", "ChunkFooterSize", "BlockHeaderSize", "BlockFooterSize", "EncryptionId", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
